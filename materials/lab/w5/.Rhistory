out_sigma_Y
1 / (out_c_Y * out_sigma_Y)
length(deg_karate)
rm(list=ls())
# Load the karate dataset
----------------------------
data(karate)
deg_karate <- degree(karate)
# Load the karate dataset
----------------------------
data(karate)
deg_karate <- degree(karate)
# Load the karate dataset
----------------------------
data(karate)
rm(list=ls())
# AR
y <- c()
y[1] = 0
for (t in t:T){
y[t] <- y[t-1] + rnorm(1, 0, 1)
}
T = 100
# AR
y <- c()
y[1] = 0
for (t in t:T){
y[t] <- y[t-1] + rnorm(1, 0, 1)
}
# AR
y <- rep(NA, T)
y <- rep(NA, T)
y[1] = 0
for (t in t:T){
y[t] <- y[t-1] + rnorm(1, 0, 1)
}
T = 100
# AR
y <- rep(NA, T)
y[1] = 0
for (t in 2:T){
y[t] <- y[t-1] + rnorm(1, 0, 1)
}
acf(y)
pacf(y)
T = 100
# AR
y <- rep(NA, T)
y[1] = 0
y[2] = 0
for (t in 2:T){
y[t] <- y[t-1] + y[t-2] + rnorm(1, 0, 1)
}
acf(y)
pacf(y)
T = 100
# AR
y <- rep(NA, T)
y[1] = 0
y[2] = 0
for (t in 3:T){
y[t] <- y[t-1] + y[t-2] + rnorm(1, 0, 1)
}
acf(y)
pacf(y)
T = 100
# AR
y <- rep(NA, T)
y[1] = 0
y[2] = 1
for (t in 3:T){
y[t] <- y[t-1] + y[t-2] + rnorm(1, 0, 1)
}
acf(y)
pacf(y)
acf(y)
T = 100
# AR
y <- rep(NA, T)
y[1] = 0
y[2] = 1
for (t in 3:T){
y[t] <- 0.5 * y[t-1] + 0.4 * y[t-2] + rnorm(1, 0, 1)
}
acf(y)
pacf(y)
acf(y)
pacf(y)
T = 100
# AR
y <- c()
y[1] = 0
y[2] = 1
for (t in 3:T){
y[t] <- 0.5 * y[t-1] + 0.4 * y[t-2] + rnorm(1, 0, 1)
}
acf(y)
pacf(y)
T = 100
# AR
y <- c()
y[1] = 0
y[2] = 1
for (t in 3:T){
y[t] <- 0.5 * y[t-1] + 0.6 * y[t-2] + rnorm(1, 0, 1)
}
acf(y)
pacf(y)
acf(y)
plot(1:T, y)
plot(1:T, y, "l")
T = 100
# AR
y <- c()
y[1] = 0
y[2] = 1
for (t in 3:T){
y[t] <- 0.5 * y[t-1] + 0.2 * y[t-2] + rnorm(1, 0, 1)
}
plot(1:T, y, "l")
acf(y)
pacf(y)
T = 100
# AR
y <- c()
y[1] = 0
y[2] = 1
for (t in 3:T){
y[t] <- 0.5 * y[t-1] + 0.2 * y[t-2] + rnorm(1, 0, 1)
}
par(mfrow=c(1,3))
plot(1:T, y, "l")
acf(y)
pacf(y)
T = 100
# AR
y <- c()
y[1] = 0
y[2] = 1
for (t in 3:T){
y[t] <- 0.5 * y[t-1] + 1 * y[t-2] + rnorm(1, 0, 1)
}
par(mfrow=c(1,3))
plot(1:T, y, "l")
acf(y)
pacf(y)
T = 100
# AR
y <- c()
y[1] = 0
y[2] = 1
y[3] = 1
for (t in 4:T){
y[t] <- 0.5 * y[t-1] + 0.2 * y[t-2] + 0.2 * y[t-3]   + rnorm(1, 0, 1)
}
par(mfrow=c(1,3))
plot(1:T, y, "l")
acf(y)
pacf(y)
T = 100
# AR
y <- c()
y[1] = 0
y[2] = 1
y[3] = 2
for (t in 4:T){
y[t] <- 0.5 * y[t-1] + 0.2 * y[t-2] + 0.2 * y[t-3]   + rnorm(1, 0, 1)
}
par(mfrow=c(1,3))
plot(1:T, y, "l")
acf(y)
pacf(y)
T = 100
# AR
y <- c()
y[1] = 0
y[2] = 1
y[3] = 2
for (t in 4:T){
y[t] <- 0.5 * y[t-1] + 0.2 * y[t-2] + 0.2 * y[t-3]   + rnorm(1, 0, 0.1)
}
par(mfrow=c(1,3))
plot(1:T, y, "l")
acf(y)
pacf(y)
T = 100
# AR
y <- c()
y[1] = 0
y[2] = 0
y[3] = 0
for (t in 4:T){
y[t] <- 0.5 * y[t-1] + 0.2 * y[t-2] + 0.2 * y[t-3]   + rnorm(1, 0, 0.4)
}
par(mfrow=c(1,3))
plot(1:T, y, "l")
acf(y)
pacf(y)
# MA
y <- c()
w <- c()
w[1] = rnorm(1, 0, 0.5)
w[2] = rnorm(1, 0, 0.5)
w[3] = rnorm(1, 0, 0.5)
for (t in 4:T){
y[t] <- 0.5 * w[t-1] + w[t-2] + w[t-3]
}
par(mfrow=c(1,3))
plot(1:T, y, "l")
acf(y)
pacf(y)
# MA
y <- c()
w <- c()
w[1] = rnorm(1, 0, 0.5)
w[2] = rnorm(1, 0, 0.5)
w[3] = rnorm(1, 0, 0.5)
y[1] = w[1]
y[2] = w[2]
for (t in 4:T){
y[t] <- 0.5 * w[t-1] + w[t-2] + w[t-3]
}
par(mfrow=c(1,3))
plot(1:T, y, "l")
acf(y)
pacf(y)
# MA
y <- c()
w <- c()
w[1] = rnorm(1, 0, 0.5)
w[2] = rnorm(1, 0, 0.5)
w[3] = rnorm(1, 0, 0.5)
y[1] = w[1]
y[2] = w[2]
for (t in 4:T){
y[t] <- 0.5 * w[t-1] + w[t-2] + w[t-3]
}
y
# MA
y <- c()
w <- c()
w[1] = rnorm(1, 0, 0.5)
w[2] = rnorm(1, 0, 0.5)
w[3] = rnorm(1, 0, 0.5)
y[1] = w[1]
y[2] = w[2]
for (t in 4:T){
w[t] <- rnorm(1, 0, 0.5)
y[t] <- 0.5 * w[t] + 0.2 * w[t-2] + 0.3 * w[t-3]
}
par(mfrow=c(1,3))
plot(1:T, y, "l")
acf(y)
pacf(y)
y
# MA
y <- c()
w <- c()
w[1] = rnorm(1, 0, 0.5)
w[2] = rnorm(1, 0, 0.5)
y[1] = w[1]
y[2] = w[2]
for (t in 3:T){
w[t] <- rnorm(1, 0, 0.5)
y[t] <- 0.5 * w[t] + 0.2 * w[t-2] + 0.3 * w[t-3]
}
par(mfrow=c(1,3))
plot(1:T, y, "l")
acf(y)
pacf(y)
par(mfrow=c(1,3))
plot(1:T, y, "l")
y
# MA
y <- c()
w <- c()
w[1] = rnorm(1, 0, 0.5)
w[2] = rnorm(1, 0, 0.5)
y[1] = w[1]
y[2] = w[2]
for (t in 3:T){
w[t] <- rnorm(1, 0, 0.5)
y[t] <- 0.5 * w[t] + 0.2 * w[t-2] + 0.3 * w[t-3]
}
# MA
y <- c()
w <- c()
w[1] = rnorm(1, 0, 0.5)
w[2] = rnorm(1, 0, 0.5)
y[1] = w[1]
y[2] = w[2]
for (t in 3:T){
w[t] <- rnorm(1, 0, 0.5)
y[t] <- 0.5 * w[t] + 0.2 * w[t-1] + 0.3 * w[t-2]
}
par(mfrow=c(1,3))
plot(1:T, y, "l")
acf(y)
pacf(y)
install.packages("cshapes")
library(cshapes)
?cshapes
l <- cshapes::distlist()
l <- cshapes::distlist(2009)
?distlist
l <- cshapes::distlist(type = "mindist", date = "1/1/2009")
as.date("1/1/2009")
date("1/1/2009")
as.date("2009/1/1")
as.Date("2009/1/1")
l <- cshapes::distlist(type = "mindist", date = as.Date("2009/1/1"))
View(l)
rbeta(10, 1, 1)
set.seed(1)
pct <- rbeta(10, 1, 1)
odds <- pct / (1 - pct)
odds
set.seed(1)
pct <- rbeta(10, 2, 1)
odds <- pct / (1 - pct)
odds
log_odds <- log(odds)
log_odds <- log(odds)
log_odds
install.packages("sf")
library(devtools)
install_github("cbail/textnets")
install.packages("installr")
library(installr)
updateR()
x = c(3.6, 9.6, 3.1,−6.2, 14.7, 4.6, 5.4, 12.1,−0.7,−5.4)
y = c(−0.4,−0.3, 0, 0,−0.3,−0.7,−0.7,−0.7,−0.8, 0.9)
mean(x)
mean(y)
?var
var(x)
var(y)
sd(x)
sd(y)
cov(x, y)
cor(x, y)
sum(x) / length(x)
sum(y) / length(y)
sum((x - mean(x))^2)
sum((x - mean(x))^2) / length(x)
sum((x - mean(x))^2) / (length(x) - 1)
sum((x - mean(y))^2) / (length(x) - 1)
sum((x - mean(y))^2) / (length(y) - 1)
sum((y - mean(y))^2) / (length(y) - 1)
sqrt(sum((x - mean(x))^2) / (length(x) - 1))
sqrt(sum((x - mean(x))^2) / (length(x) - 1))
sqrt(sum((y - mean(y))^2) / (length(y) - 1))
sum((x - mean(x))^2)
sum((x - mean(x))^2) / (length(x) - 1)
cov(x, y)
sum((y - mean(y) * (y - mean(y)) / 9
sum((y - mean(y)) * (x - mean(x)) / 9
sum((y - mean(y)) * (x - mean(x))) / 9
cov(x, y)
cor(x, y)
library(xtable)
?xtable
#-----------------------------
# load your data
#-----------------------------
# Load your dataset of interest.
# Below is an example economic dataset coming with R
data("longley")
# J. W. Longley (1967) An appraisal of least-squares programs from
# the point of view of the user.
# Journal of the American Statistical Association 62, 819-841.
# Just to mess up the dataset by a bit
names(longley) <- c("gnp.def", "gnp", "unemp", "force", "pop", "yr", "emp")
#-------------------------------------
# Table of summary statistics (con'd)
#-------------------------------------
# Produce a LaTeX summary stats table (can also be HTML)
stargazer(longley, title = "Descriptive Statistics",
mean.sd = TRUE, median = TRUE, iqr = TRUE, min.max = TRUE,
header = FALSE, label = "tab:desc", type = out_type)
#---------------------------
# Table of summary statistics
#---------------------------
# Summary statistics
summary(longley)
# Not pretty. We can do better!
#-------------------------------------
# Table of summary statistics (con'd)
#-------------------------------------
# Produce a LaTeX summary stats table (can also be HTML)
stargazer(longley, title = "Descriptive Statistics",
mean.sd = TRUE, median = TRUE, iqr = TRUE, min.max = TRUE,
header = FALSE, label = "tab:desc", type = out_type)
#-----------------------------
# load your data
#-----------------------------
# Load your dataset of interest.
# Below is an example economic dataset coming with R
data("longley")
# J. W. Longley (1967) An appraisal of least-squares programs from
# the point of view of the user.
# Journal of the American Statistical Association 62, 819-841.
# Just to mess up the dataset by a bit
names(longley) <- c("gnp.def", "gnp", "unemp", "force", "pop", "yr", "emp")
#-------------------------------------
# Table of summary statistics (con'd)
#-------------------------------------
# Produce a LaTeX summary stats table (can also be HTML)
stargazer(longley, title = "Descriptive Statistics",
mean.sd = TRUE, median = TRUE, iqr = TRUE, min.max = TRUE,
header = FALSE, label = "tab:desc", type = out_type)
library(stargazer)
#-------------------------------------
# Table of summary statistics (con'd)
#-------------------------------------
# Produce a LaTeX summary stats table (can also be HTML)
stargazer(longley, title = "Descriptive Statistics",
mean.sd = TRUE, median = TRUE, iqr = TRUE, min.max = TRUE,
header = FALSE, label = "tab:desc", type = out_type)
out_type = "latex"
#-------------------------------------
# Table of summary statistics (con'd)
#-------------------------------------
# Produce a LaTeX summary stats table (can also be HTML)
stargazer(longley, title = "Descriptive Statistics",
mean.sd = TRUE, median = TRUE, iqr = TRUE, min.max = TRUE,
header = FALSE, label = "tab:desc", type = out_type)
stargazer(longley, title = "Descriptive Statistics",
mean.sd = TRUE, median = TRUE, iqr = TRUE, min.max = TRUE,
header = FALSE, label = "tab:desc", type = out_type)
)
stargazer(longley, title = "Descriptive Statistics",
mean.sd = TRUE, median = TRUE, iqr = TRUE, min.max = TRUE,
header = FALSE, label = "tab:desc", type = out_type)
stargazer(longley, title = "Descriptive Statistics",
mean.sd = TRUE, median = TRUE, iqr = TRUE, min.max = TRUE,
header = FALSE, label = "tab:desc", type = out_type)
# Instead of directly output your outcome.
# Saving the output is a better strategy. Think about why.
desc_tab <- capture.output(
stargazer(longley, title = "Descriptive Statistics",
mean.sd = TRUE, median = TRUE, iqr = TRUE, min.max = TRUE,
header = FALSE, label = "tab:desc", type = out_type)
)
desc_tab
# Instead of directly output your outcome.
# Saving the output is a better strategy. Think about why.
desc_tab <- capture.output(
stargazer(longley, title = "Descriptive Statistics",
mean.sd = TRUE, median = TRUE, iqr = TRUE, min.max = TRUE,
header = FALSE, label = "tab:desc", type = out_type)
)
setwd("D:/Dropbox/WORK/Courses (now)/POLI630 Intro to Empirics/ps630 public material/Duke-fall18-PS630-lab/materials/lab/w5")
# Save it to a folder for tables (created earlier)
writeLines(desc_tab, "tables/descriptive.tex")
# I just generate a .bib file (inline citation is a pain) in the same folder as the .Rmd code with this chunk.
# Substitute it with your real bibliography file.
# Remember. NO SPECIAL CHARACTER in your .bib file. Ideally only a-z,A-Z
bib_text <- '
# Libraries
library(dplyr)
library(tidyr)
# Data
load("polity.Rdata")
polity <- as_tibble(polity)
rm(list=ls())
# Libraries
library(dplyr)
library(tidyr)
# Data
load("polity.Rdata")
polity <- as_tibble(polity)
setwd("D:/Dropbox/WORK/Courses (now)/POLI630 Intro to Empirics/ps630 public material/Duke-fall18-PS630-lab/materials/lab/w5")
# Libraries
library(dplyr)
library(tidyr)
# Data
load("polity.Rdata")
polity <- as_tibble(polity)
polity2 <- filter(polity, youear %in% 1990:2000)
polity2 <- filter(polity, year %in% 1990:2000)
polity2 <- select(polity2, country, polity)
polity2 <- filter(polity, year %in% 1990:2000)
polity3 <- select(polity2, country, polity)
View(polity3)
polity4 <- filter(polity3, country == "Uganda")
View(polity4)
polity5 <- arrange(polity4, -polity)
polity5
polity3 <- select(polity2, country, polity, year)
polity4 <- filter(polity3, country == "Uganda")
polity5 <- arrange(polity4, -polity)
polity5
polity
polity %>%
filter(., year %in% 1990:2000) %>%
select(., country, year, polity) %>%
select(., country == "Uganda") %>%
arrange(., -polity)
polity %>%
filter(., year %in% 1990:2000) %>%
select(., country, year, polity)
polity %>%
filter(., year %in% 1990:2000) %>%
select(., country, year, polity) %>%
filter(., country == "Uganda") %>%
arrange(., -polity)
uganda <- polity %>%
filter(., year %in% 1990:2000) %>%
select(., country, year, polity) %>%
filter(., country == "Uganda") %>%
arrange(., -polity)
